// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendPkg struct {
	Data                 []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Type                 int32             `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Medata               map[string][]byte `protobuf:"bytes,4,rep,name=medata,proto3" json:"medata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendPkg) Reset()         { *m = SendPkg{} }
func (m *SendPkg) String() string { return proto.CompactTextString(m) }
func (*SendPkg) ProtoMessage()    {}
func (*SendPkg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *SendPkg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendPkg.Unmarshal(m, b)
}
func (m *SendPkg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendPkg.Marshal(b, m, deterministic)
}
func (m *SendPkg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendPkg.Merge(m, src)
}
func (m *SendPkg) XXX_Size() int {
	return xxx_messageInfo_SendPkg.Size(m)
}
func (m *SendPkg) XXX_DiscardUnknown() {
	xxx_messageInfo_SendPkg.DiscardUnknown(m)
}

var xxx_messageInfo_SendPkg proto.InternalMessageInfo

func (m *SendPkg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SendPkg) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SendPkg) GetMedata() map[string][]byte {
	if m != nil {
		return m.Medata
	}
	return nil
}

type SendRequest struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Pkg                  *SendPkg `protobuf:"bytes,3,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SendRequest) GetPkg() *SendPkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type RecvResponse struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Pkg                  *SendPkg `protobuf:"bytes,3,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvResponse) Reset()         { *m = RecvResponse{} }
func (m *RecvResponse) String() string { return proto.CompactTextString(m) }
func (*RecvResponse) ProtoMessage()    {}
func (*RecvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *RecvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvResponse.Unmarshal(m, b)
}
func (m *RecvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvResponse.Marshal(b, m, deterministic)
}
func (m *RecvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvResponse.Merge(m, src)
}
func (m *RecvResponse) XXX_Size() int {
	return xxx_messageInfo_RecvResponse.Size(m)
}
func (m *RecvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecvResponse proto.InternalMessageInfo

func (m *RecvResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RecvResponse) GetPkg() *SendPkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type StatusResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type RecvRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvRequest) Reset()         { *m = RecvRequest{} }
func (m *RecvRequest) String() string { return proto.CompactTextString(m) }
func (*RecvRequest) ProtoMessage()    {}
func (*RecvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *RecvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvRequest.Unmarshal(m, b)
}
func (m *RecvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvRequest.Marshal(b, m, deterministic)
}
func (m *RecvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvRequest.Merge(m, src)
}
func (m *RecvRequest) XXX_Size() int {
	return xxx_messageInfo_RecvRequest.Size(m)
}
func (m *RecvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecvRequest proto.InternalMessageInfo

func (m *RecvRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pwd                  string   `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRequest) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	ExpTime              int64    `protobuf:"varint,3,opt,name=expTime,proto3" json:"expTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *LoginResponse) GetExpTime() int64 {
	if m != nil {
		return m.ExpTime
	}
	return 0
}

type LogoutRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*SendPkg)(nil), "SendPkg")
	proto.RegisterMapType((map[string][]byte)(nil), "SendPkg.MedataEntry")
	proto.RegisterType((*SendRequest)(nil), "SendRequest")
	proto.RegisterType((*RecvResponse)(nil), "RecvResponse")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
	proto.RegisterType((*RecvRequest)(nil), "RecvRequest")
	proto.RegisterType((*UserRequest)(nil), "UserRequest")
	proto.RegisterType((*LoginResponse)(nil), "LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "LogoutRequest")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xc1, 0xee, 0x93, 0x40,
	0x10, 0xc6, 0xb3, 0x40, 0x69, 0x3b, 0xd0, 0x6a, 0x36, 0x8d, 0x21, 0x9c, 0x08, 0xa6, 0x09, 0x4d,
	0xcc, 0xc6, 0xb4, 0x17, 0xf5, 0xe0, 0xc5, 0x78, 0xd3, 0x68, 0xb6, 0x1a, 0xcf, 0xd8, 0x8e, 0xb4,
	0x41, 0x58, 0x84, 0xa5, 0xda, 0x57, 0xf1, 0xad, 0x7c, 0x23, 0xb3, 0xbb, 0x50, 0xb1, 0xfd, 0xa7,
	0xb7, 0x6f, 0x26, 0xdf, 0x7c, 0xfb, 0xdb, 0x59, 0x00, 0xd8, 0x1d, 0x52, 0xc9, 0xaa, 0x5a, 0x48,
	0x11, 0xff, 0x26, 0x30, 0xde, 0x62, 0xb9, 0xff, 0x98, 0x67, 0x94, 0x82, 0xb3, 0x4f, 0x65, 0x1a,
	0x58, 0x11, 0x49, 0x7c, 0xae, 0xb5, 0xea, 0xc9, 0x73, 0x85, 0x81, 0x1d, 0x91, 0x64, 0xc4, 0xb5,
	0xa6, 0xcf, 0xc0, 0x2d, 0x50, 0x3b, 0x9d, 0xc8, 0x4e, 0xbc, 0xf5, 0x82, 0x75, 0x09, 0xec, 0xbd,
	0x6e, 0xbf, 0x2d, 0x65, 0x7d, 0xe6, 0x9d, 0x27, 0x7c, 0x09, 0xde, 0xa0, 0x4d, 0x1f, 0x83, 0x9d,
	0xe3, 0x39, 0x20, 0x11, 0x49, 0xa6, 0x5c, 0x49, 0xba, 0x80, 0xd1, 0x29, 0xfd, 0xde, 0x62, 0x77,
	0xae, 0x29, 0x5e, 0x59, 0x2f, 0x48, 0xfc, 0x01, 0x3c, 0x95, 0xcc, 0xf1, 0x47, 0x8b, 0x8d, 0xa4,
	0x73, 0xb0, 0xa4, 0xe8, 0x26, 0x2d, 0x29, 0xd4, 0xa0, 0x14, 0x39, 0x96, 0x7a, 0x70, 0xca, 0x4d,
	0x41, 0x43, 0xb0, 0xab, 0x3c, 0xd3, 0xc0, 0xde, 0x7a, 0xd2, 0xa3, 0x71, 0xd5, 0x8c, 0x5f, 0x83,
	0xcf, 0x71, 0x77, 0xe2, 0xd8, 0x54, 0xa2, 0x6c, 0x50, 0xdd, 0xee, 0x5b, 0x2d, 0x8a, 0x2e, 0x53,
	0xeb, 0xbb, 0xf3, 0x09, 0xcc, 0xb7, 0x32, 0x95, 0x6d, 0x73, 0x49, 0x78, 0x02, 0xae, 0xe9, 0xe8,
	0x8c, 0x09, 0xef, 0xaa, 0xf8, 0x29, 0x78, 0xe6, 0x24, 0x83, 0x7e, 0x41, 0x25, 0x03, 0xd4, 0x78,
	0x03, 0xde, 0xe7, 0x06, 0xeb, 0xde, 0x44, 0xc1, 0x29, 0xd3, 0x02, 0x7b, 0x1a, 0xa5, 0xd5, 0xba,
	0xaa, 0x9f, 0xfb, 0xee, 0x86, 0x4a, 0xc6, 0x5f, 0x60, 0xf6, 0x4e, 0x64, 0xc7, 0xf2, 0x82, 0xf0,
	0x60, 0xb6, 0x02, 0x6b, 0x0c, 0x98, 0x65, 0xc0, 0x4c, 0x45, 0x03, 0x18, 0xe3, 0xaf, 0xea, 0xd3,
	0xb1, 0x30, 0x6f, 0x6a, 0xf3, 0xbe, 0x8c, 0x97, 0x3a, 0x58, 0xb4, 0xf2, 0x2e, 0xf4, 0xfa, 0x0f,
	0x01, 0xe7, 0xcd, 0x21, 0x95, 0x74, 0x09, 0x23, 0x0d, 0x42, 0x7d, 0x36, 0xb8, 0x45, 0x38, 0x67,
	0xff, 0xe3, 0xad, 0x60, 0xc2, 0x31, 0x3b, 0x36, 0x12, 0xeb, 0x2b, 0xe7, 0x23, 0x76, 0xb5, 0xcc,
	0x15, 0xb8, 0x86, 0x80, 0xea, 0x90, 0x7f, 0x28, 0xb7, 0xd6, 0x25, 0x38, 0x6a, 0xbf, 0xd4, 0x67,
	0x83, 0x35, 0x87, 0x33, 0x36, 0x7c, 0xde, 0xe7, 0x44, 0xd9, 0xd4, 0x03, 0x52, 0x9f, 0x0d, 0x3e,
	0xa4, 0x9b, 0xb4, 0xaf, 0xae, 0xfe, 0x19, 0x36, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x85, 0xb8,
	0xb2, 0x8e, 0x1a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Register(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//开始接受消息
	Recv(ctx context.Context, in *RecvRequest, opts ...grpc.CallOption) (Chat_RecvClient, error)
	//发送消息
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/Chat/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Register(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/Chat/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/Chat/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Recv(ctx context.Context, in *RecvRequest, opts ...grpc.CallOption) (Chat_RecvClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/Chat/Recv", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatRecvClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_RecvClient interface {
	Recv() (*RecvResponse, error)
	grpc.ClientStream
}

type chatRecvClient struct {
	grpc.ClientStream
}

func (x *chatRecvClient) Recv() (*RecvResponse, error) {
	m := new(RecvResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/Chat/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Login(context.Context, *UserRequest) (*LoginResponse, error)
	Register(context.Context, *UserRequest) (*StatusResponse, error)
	Logout(context.Context, *LogoutRequest) (*StatusResponse, error)
	//开始接受消息
	Recv(*RecvRequest, Chat_RecvServer) error
	//发送消息
	Send(context.Context, *SendRequest) (*StatusResponse, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Login(ctx context.Context, req *UserRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedChatServer) Register(ctx context.Context, req *UserRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedChatServer) Logout(ctx context.Context, req *LogoutRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedChatServer) Recv(req *RecvRequest, srv Chat_RecvServer) error {
	return status.Errorf(codes.Unimplemented, "method Recv not implemented")
}
func (*UnimplementedChatServer) Send(ctx context.Context, req *SendRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Login(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Register(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Recv_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RecvRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Recv(m, &chatRecvServer{stream})
}

type Chat_RecvServer interface {
	Send(*RecvResponse) error
	grpc.ServerStream
}

type chatRecvServer struct {
	grpc.ServerStream
}

func (x *chatRecvServer) Send(m *RecvResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chat/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Chat_Login_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Chat_Register_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Chat_Logout_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Chat_Send_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Recv",
			Handler:       _Chat_Recv_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
